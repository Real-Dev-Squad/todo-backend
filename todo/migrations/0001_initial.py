# Generated by Django 5.1.5 on 2025-07-23 08:24

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("display_id", models.CharField(blank=True, max_length=50, null=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("priority", models.IntegerField()),
                ("status", models.CharField(max_length=20)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("labels", models.JSONField(blank=True, default=list)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deferred_at", models.DateTimeField(blank=True, null=True)),
                ("deferred_till", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("due_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "tasks",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("google_id", models.CharField(db_index=True, max_length=255, unique=True)),
                ("email_id", models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ("name", models.CharField(max_length=255)),
                ("picture", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "users",
                "indexes": [models.Index(fields=["email_id"], name="users_email_i_bb3678_idx")],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("invite_code", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="created_teams", to="todo.user"
                    ),
                ),
                (
                    "poc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teams_as_poc",
                        to="todo.user",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_teams",
                        to="todo.user",
                    ),
                ),
            ],
            options={
                "db_table": "teams",
            },
        ),
        migrations.CreateModel(
            name="TaskAssignment",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("user_type", models.CharField(max_length=10)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("task", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.task")),
                (
                    "assignee_team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tasks_as_team",
                        to="todo.team",
                    ),
                ),
                (
                    "assignee_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tasks_as_user",
                        to="todo.user",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_task_assignments",
                        to="todo.user",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_task_assignments",
                        to="todo.user",
                    ),
                ),
            ],
            options={
                "db_table": "task_assignment",
            },
        ),
        migrations.AddField(
            model_name="task",
            name="assignee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_tasks",
                to="todo.user",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="created_by",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="created_tasks", to="todo.user"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="deferred_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deferred_tasks",
                to="todo.user",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_tasks",
                to="todo.user",
            ),
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("scope", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="created_roles", to="todo.user"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_roles",
                        to="todo.user",
                    ),
                ),
            ],
            options={
                "db_table": "roles",
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("color", models.CharField(max_length=50)),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="created_labels", to="todo.user"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_labels",
                        to="todo.user",
                    ),
                ),
            ],
            options={
                "db_table": "labels",
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("action", models.CharField(default="reassign_executor", max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("task", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.task")),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.team")),
                (
                    "new_executor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auditlog_new_executor",
                        to="todo.user",
                    ),
                ),
                (
                    "previous_executor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="auditlog_previous_executor",
                        to="todo.user",
                    ),
                ),
                (
                    "spoc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="auditlog_spoc", to="todo.user"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="auditlog_updated_by",
                        to="todo.user",
                    ),
                ),
            ],
            options={
                "db_table": "audit_logs",
            },
        ),
        migrations.CreateModel(
            name="UserTeamDetails",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_user_team_details",
                        to="todo.user",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="user_team_details", to="todo.role"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="user_details", to="todo.team"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_user_team_details",
                        to="todo.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="team_details", to="todo.user"
                    ),
                ),
            ],
            options={
                "db_table": "user_team_details",
            },
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="created_watchlists", to="todo.user"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="watchlist_items", to="todo.task"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_watchlists",
                        to="todo.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="watchlists", to="todo.user"
                    ),
                ),
            ],
            options={
                "db_table": "watchlist",
            },
        ),
        migrations.AddIndex(
            model_name="team",
            index=models.Index(fields=["name"], name="teams_name_12b53a_idx"),
        ),
        migrations.AddIndex(
            model_name="team",
            index=models.Index(fields=["invite_code"], name="teams_invite__c2d710_idx"),
        ),
        migrations.AddIndex(
            model_name="taskassignment",
            index=models.Index(fields=["task"], name="task_assign_task_id_b36aa9_idx"),
        ),
        migrations.AddIndex(
            model_name="taskassignment",
            index=models.Index(fields=["assignee_user"], name="task_assign_assigne_218713_idx"),
        ),
        migrations.AddIndex(
            model_name="taskassignment",
            index=models.Index(fields=["assignee_team"], name="task_assign_assigne_9324e8_idx"),
        ),
        migrations.AddIndex(
            model_name="taskassignment",
            index=models.Index(fields=["user_type"], name="task_assign_user_ty_223328_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["status"], name="tasks_status_031d4c_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["priority"], name="tasks_priorit_a9efa1_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["created_by"], name="tasks_created_816ff3_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["created_at"], name="tasks_created_db4e37_idx"),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(fields=["name"], name="roles_name_a96913_idx"),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(fields=["scope"], name="roles_scope_75ec8b_idx"),
        ),
        migrations.AddIndex(
            model_name="label",
            index=models.Index(fields=["name"], name="labels_name_d8f370_idx"),
        ),
        migrations.AddIndex(
            model_name="label",
            index=models.Index(fields=["created_by"], name="labels_created_8c497c_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["task"], name="audit_logs_task_id_eaea4d_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["team"], name="audit_logs_team_id_a21b27_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["action"], name="audit_logs_action_31f574_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["timestamp"], name="audit_logs_timesta_423be6_idx"),
        ),
        migrations.AddIndex(
            model_name="userteamdetails",
            index=models.Index(fields=["user"], name="user_team_d_user_id_34020b_idx"),
        ),
        migrations.AddIndex(
            model_name="userteamdetails",
            index=models.Index(fields=["team"], name="user_team_d_team_id_b2c94e_idx"),
        ),
        migrations.AddIndex(
            model_name="userteamdetails",
            index=models.Index(fields=["role"], name="user_team_d_role_id_0abcc2_idx"),
        ),
        migrations.AddIndex(
            model_name="watchlist",
            index=models.Index(fields=["task"], name="watchlist_task_id_aa6927_idx"),
        ),
        migrations.AddIndex(
            model_name="watchlist",
            index=models.Index(fields=["user"], name="watchlist_user_id_c64328_idx"),
        ),
    ]
