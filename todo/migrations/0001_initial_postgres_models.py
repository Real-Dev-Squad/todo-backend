# Generated by Django 5.1.5 on 2025-08-23 12:33

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PostgresAuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('READ', 'Read'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout')], max_length=20)),
                ('collection_name', models.CharField(max_length=100)),
                ('document_id', models.CharField(max_length=24)),
                ('user_mongo_id', models.CharField(blank=True, max_length=24, null=True)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_audit_logs',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_au_mongo_i_e01883_idx'), models.Index(fields=['action'], name='postgres_au_action_582248_idx'), models.Index(fields=['collection_name'], name='postgres_au_collect_4f3415_idx'), models.Index(fields=['document_id'], name='postgres_au_documen_2dd530_idx'), models.Index(fields=['user_mongo_id'], name='postgres_au_user_mo_20b3ab_idx'), models.Index(fields=['timestamp'], name='postgres_au_timesta_ee4eef_idx'), models.Index(fields=['sync_status'], name='postgres_au_sync_st_b7b811_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#000000', max_length=7)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_labels',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_la_mongo_i_f36969_idx'), models.Index(fields=['name'], name='postgres_la_name_25bdde_idx'), models.Index(fields=['sync_status'], name='postgres_la_sync_st_f795eb_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('permissions', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_roles',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_ro_mongo_i_018753_idx'), models.Index(fields=['name'], name='postgres_ro_name_ef794d_idx'), models.Index(fields=['sync_status'], name='postgres_ro_sync_st_9386cc_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('display_id', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=3)),
                ('status', models.CharField(default='TODO', max_length=20)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('due_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(blank=True, max_length=24, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_tasks',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_ta_mongo_i_4bcd8b_idx'), models.Index(fields=['display_id'], name='postgres_ta_display_0f1eae_idx'), models.Index(fields=['status'], name='postgres_ta_status_ae228e_idx'), models.Index(fields=['priority'], name='postgres_ta_priorit_6ea8ac_idx'), models.Index(fields=['created_by'], name='postgres_ta_created_a5359a_idx'), models.Index(fields=['due_at'], name='postgres_ta_due_at_45ae89_idx'), models.Index(fields=['sync_status'], name='postgres_ta_sync_st_e67786_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresDeferredDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deferred_at', models.DateTimeField(blank=True, null=True)),
                ('deferred_till', models.DateTimeField(blank=True, null=True)),
                ('deferred_by', models.CharField(blank=True, max_length=24, null=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='deferred_details', to='todo.postgrestask')),
            ],
            options={
                'db_table': 'postgres_deferred_details',
            },
        ),
        migrations.CreateModel(
            name='PostgresTaskAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('task_mongo_id', models.CharField(max_length=24)),
                ('user_mongo_id', models.CharField(max_length=24)),
                ('team_mongo_id', models.CharField(blank=True, max_length=24, null=True)),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='ASSIGNED', max_length=20)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(blank=True, max_length=24, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_task_assignments',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_ta_mongo_i_326fa9_idx'), models.Index(fields=['task_mongo_id'], name='postgres_ta_task_mo_95ca3b_idx'), models.Index(fields=['user_mongo_id'], name='postgres_ta_user_mo_d13fa3_idx'), models.Index(fields=['team_mongo_id'], name='postgres_ta_team_mo_a0605f_idx'), models.Index(fields=['status'], name='postgres_ta_status_8b9698_idx'), models.Index(fields=['sync_status'], name='postgres_ta_sync_st_385c3f_idx')],
                'unique_together': {('task_mongo_id', 'user_mongo_id')},
            },
        ),
        migrations.CreateModel(
            name='PostgresTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('invite_code', models.CharField(max_length=100, unique=True)),
                ('poc_id', models.CharField(blank=True, max_length=24, null=True)),
                ('created_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(max_length=24)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_teams',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_te_mongo_i_abc268_idx'), models.Index(fields=['invite_code'], name='postgres_te_invite__980f9f_idx'), models.Index(fields=['created_by'], name='postgres_te_created_8f28f6_idx'), models.Index(fields=['sync_status'], name='postgres_te_sync_st_19c6d6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresTeamCreationInviteCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('code', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.CharField(max_length=24)),
                ('used_by', models.CharField(blank=True, max_length=24, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_team_creation_invite_codes',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_te_mongo_i_9b5218_idx'), models.Index(fields=['code'], name='postgres_te_code_e912c2_idx'), models.Index(fields=['created_by'], name='postgres_te_created_cc1648_idx'), models.Index(fields=['is_used'], name='postgres_te_is_used_23eea1_idx'), models.Index(fields=['sync_status'], name='postgres_te_sync_st_0225fb_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('google_id', models.CharField(max_length=255, unique=True)),
                ('email_id', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('picture', models.URLField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_users',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_us_mongo_i_b7de3d_idx'), models.Index(fields=['google_id'], name='postgres_us_google__842c47_idx'), models.Index(fields=['email_id'], name='postgres_us_email_i_fde0e2_idx'), models.Index(fields=['sync_status'], name='postgres_us_sync_st_4b81bc_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresUserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('user_mongo_id', models.CharField(max_length=24)),
                ('role_mongo_id', models.CharField(max_length=24)),
                ('team_mongo_id', models.CharField(blank=True, max_length=24, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(blank=True, max_length=24, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_user_roles',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_us_mongo_i_a0b3f8_idx'), models.Index(fields=['user_mongo_id'], name='postgres_us_user_mo_7d8290_idx'), models.Index(fields=['role_mongo_id'], name='postgres_us_role_mo_bbe013_idx'), models.Index(fields=['team_mongo_id'], name='postgres_us_team_mo_ffec62_idx'), models.Index(fields=['sync_status'], name='postgres_us_sync_st_58315c_idx')],
                'unique_together': {('user_mongo_id', 'role_mongo_id', 'team_mongo_id')},
            },
        ),
        migrations.CreateModel(
            name='PostgresUserTeamDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('user_id', models.CharField(max_length=24)),
                ('team_id', models.CharField(max_length=24)),
                ('created_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(max_length=24)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_user_team_details',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_us_mongo_i_c533ba_idx'), models.Index(fields=['user_id'], name='postgres_us_user_id_50613a_idx'), models.Index(fields=['team_id'], name='postgres_us_team_id_468318_idx'), models.Index(fields=['is_active'], name='postgres_us_is_acti_a58a6c_idx'), models.Index(fields=['sync_status'], name='postgres_us_sync_st_bbef4a_idx')],
                'unique_together': {('user_id', 'team_id')},
            },
        ),
        migrations.CreateModel(
            name='PostgresWatchlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mongo_id', models.CharField(blank=True, max_length=24, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('user_mongo_id', models.CharField(max_length=24)),
                ('created_by', models.CharField(max_length=24)),
                ('updated_by', models.CharField(blank=True, max_length=24, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('SYNCED', 'Synced'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='SYNCED', max_length=20)),
                ('sync_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'postgres_watchlists',
                'indexes': [models.Index(fields=['mongo_id'], name='postgres_wa_mongo_i_06b4ca_idx'), models.Index(fields=['user_mongo_id'], name='postgres_wa_user_mo_e8f264_idx'), models.Index(fields=['created_by'], name='postgres_wa_created_2a76a8_idx'), models.Index(fields=['sync_status'], name='postgres_wa_sync_st_19b821_idx')],
            },
        ),
        migrations.CreateModel(
            name='PostgresTaskLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_mongo_id', models.CharField(max_length=24)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_labels', to='todo.postgrestask')),
            ],
            options={
                'db_table': 'postgres_task_labels',
                'indexes': [models.Index(fields=['label_mongo_id'], name='postgres_ta_label_m_8f146d_idx')],
                'unique_together': {('task', 'label_mongo_id')},
            },
        ),
        migrations.CreateModel(
            name='PostgresWatchlistTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_mongo_id', models.CharField(max_length=24)),
                ('watchlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist_tasks', to='todo.postgreswatchlist')),
            ],
            options={
                'db_table': 'postgres_watchlist_tasks',
                'indexes': [models.Index(fields=['task_mongo_id'], name='postgres_wa_task_mo_3ecf04_idx')],
                'unique_together': {('watchlist', 'task_mongo_id')},
            },
        ),
    ]
