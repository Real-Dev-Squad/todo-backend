# Generated by Django 5.1.5 on 2025-07-20 15:12

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("task_id", models.UUIDField()),
                ("team_id", models.UUIDField()),
                ("previous_executor_id", models.UUIDField(blank=True, null=True)),
                ("new_executor_id", models.UUIDField()),
                ("spoc_id", models.UUIDField()),
                ("action", models.CharField(default="reassign_executor", max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "audit_logs",
                "indexes": [
                    models.Index(fields=["task_id"], name="audit_logs_task_id_eaea4d_idx"),
                    models.Index(fields=["team_id"], name="audit_logs_team_id_a21b27_idx"),
                    models.Index(fields=["action"], name="audit_logs_action_31f574_idx"),
                    models.Index(fields=["timestamp"], name="audit_logs_timesta_423be6_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("color", models.CharField(max_length=50)),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.UUIDField()),
                ("updated_by", models.UUIDField(blank=True, null=True)),
            ],
            options={
                "db_table": "labels",
                "indexes": [
                    models.Index(fields=["name"], name="labels_name_d8f370_idx"),
                    models.Index(fields=["created_by"], name="labels_created_70e6c1_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("scope", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("created_by", models.UUIDField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "roles",
                "indexes": [
                    models.Index(fields=["name"], name="roles_name_a96913_idx"),
                    models.Index(fields=["scope"], name="roles_scope_75ec8b_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("display_id", models.CharField(blank=True, max_length=50, null=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("priority", models.CharField(max_length=20)),
                ("status", models.CharField(max_length=20)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("labels", models.JSONField(blank=True, default=list)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deferred_at", models.DateTimeField(blank=True, null=True)),
                ("deferred_till", models.DateTimeField(blank=True, null=True)),
                ("deferred_by", models.CharField(blank=True, max_length=255, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("due_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.CharField(max_length=255)),
                ("updated_by", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "tasks",
                "indexes": [
                    models.Index(fields=["status"], name="tasks_status_031d4c_idx"),
                    models.Index(fields=["priority"], name="tasks_priorit_a9efa1_idx"),
                    models.Index(fields=["created_by"], name="tasks_created_881111_idx"),
                    models.Index(fields=["created_at"], name="tasks_created_db4e37_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("poc_id", models.UUIDField(blank=True, null=True)),
                ("invite_code", models.CharField(max_length=100)),
                ("created_by", models.UUIDField()),
                ("updated_by", models.UUIDField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "teams",
                "indexes": [
                    models.Index(fields=["name"], name="teams_name_12b53a_idx"),
                    models.Index(fields=["invite_code"], name="teams_invite__c2d710_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("google_id", models.CharField(db_index=True, max_length=255, unique=True)),
                ("email_id", models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ("name", models.CharField(max_length=255)),
                ("picture", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "users",
                "indexes": [models.Index(fields=["email_id"], name="users_email_i_bb3678_idx")],
            },
        ),
        migrations.CreateModel(
            name="UserTeamDetails",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("user_id", models.UUIDField()),
                ("team_id", models.UUIDField()),
                ("is_active", models.BooleanField(default=True)),
                ("role_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField()),
                ("updated_by", models.UUIDField()),
            ],
            options={
                "db_table": "user_team_details",
                "indexes": [
                    models.Index(fields=["user_id"], name="user_team_d_user_id_34020b_idx"),
                    models.Index(fields=["team_id"], name="user_team_d_team_id_b2c94e_idx"),
                    models.Index(fields=["role_id"], name="user_team_d_role_id_0abcc2_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="TaskAssignment",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("assignee_id", models.UUIDField()),
                ("user_type", models.CharField(max_length=10)),
                ("is_active", models.BooleanField(default=True)),
                ("created_by", models.UUIDField()),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("task", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.task")),
            ],
            options={
                "db_table": "task_assignment",
                "indexes": [
                    models.Index(fields=["task"], name="task_assign_task_id_b36aa9_idx"),
                    models.Index(fields=["assignee_id"], name="task_assign_assigne_a8971c_idx"),
                    models.Index(fields=["user_type"], name="task_assign_user_ty_223328_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("created_by", models.UUIDField()),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("task", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.task")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="todo.user")),
            ],
            options={
                "db_table": "watchlist",
                "indexes": [
                    models.Index(fields=["task"], name="watchlist_task_id_aa6927_idx"),
                    models.Index(fields=["user"], name="watchlist_user_id_c64328_idx"),
                ],
            },
        ),
    ]
